{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/store/actions/index.ts","webpack:///./src/app/store/actions/menu.action.ts","webpack:///./src/app/store/index.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/app/store/reducers/menu.reducer.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./ngx-via-cep/ngx-via-cep.module\": [\n\t\t\"./src/app/pages/ngx-via-cep/ngx-via-cep.module.ts\",\n\t\t\"ngx-via-cep-ngx-via-cep-module\"\n\t],\n\t\"./pages/pages.module\": [\n\t\t\"./src/app/pages/pages.module.ts\",\n\t\t\"pages-pages-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './pages/pages.module#PagesModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<header>\\n  <nav class=\\\"navbar navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\n    <button\\n      class=\\\"navbar-toggler d-md-none d-flex\\\"\\n      type=\\\"button\\\"\\n      data-toggle=\\\"collapse\\\"\\n      data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\"\\n      [attr.aria-expanded]=\\\"menu.open\\\"\\n      aria-label=\\\"Toggle navigation\\\"\\n      (click)=\\\"handleOnClick()\\\"\\n    >\\n      <span class=\\\"navbar-toggler-icon\\\">\\n        <svg\\n          xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          viewBox=\\\"0 0 30 30\\\"\\n          width=\\\"30\\\"\\n          height=\\\"30\\\"\\n          focusable=\\\"false\\\"\\n        >\\n          <title>Menu</title>\\n          <path\\n            stroke=\\\"currentColor\\\"\\n            stroke-width=\\\"2\\\"\\n            stroke-linecap=\\\"round\\\"\\n            stroke-miterlimit=\\\"10\\\"\\n            d=\\\"M4 7h22M4 15h22M4 23h22\\\"\\n          ></path>\\n        </svg>\\n      </span>\\n    </button>\\n  </nav>\\n</header>\\n<main class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</main>\\n<footer></footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { MenuState } from './store/reducers';\nimport { Observable } from 'rxjs';\nimport { OpenMenuAction, CloseMenuAction } from './store/actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: []\n})\nexport class AppComponent implements OnInit {\n  title = 'Base Project';\n  menu$: Observable<MenuState>;\n  menu: MenuState;\n\n  constructor(private store: Store<{ menuReducer: MenuState }>) {\n    this.menu$ = this.store.pipe(select('menuReducer'));\n  }\n\n  ngOnInit() {\n    this.registerMenu$();\n  }\n\n  private registerMenu$() {\n    this.menu$.subscribe((menu: MenuState) => {\n      this.menu = menu;\n    });\n  }\n\n  private openMenu() {\n    this.store.dispatch<OpenMenuAction>(new OpenMenuAction());\n  }\n\n  private closeMenu() {\n    this.store.dispatch<CloseMenuAction>(new CloseMenuAction());\n  }\n\n  handleOnClick() {\n    if (this.menu.closed) {\n      this.openMenu();\n    } else {\n      this.closeMenu();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { metaReducers, reducers } from './store';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","export * from './menu.action';\n","import { Action } from '@ngrx/store';\n\nexport enum MenuActionTypes {\n  Open = '[Menu] Open Menu',\n  Close = '[Menu] Close Menu'\n}\n\nexport class OpenMenuAction implements Action {\n  readonly type = MenuActionTypes.Open;\n\n  constructor() {}\n}\n\nexport class CloseMenuAction implements Action {\n  readonly type = MenuActionTypes.Close;\n\n  constructor() {}\n}\n\nexport type MenuActions = OpenMenuAction | CloseMenuAction;\n","import { ActionReducer, ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { menuReducer, MenuState } from './reducers';\n\nexport interface State {\n  menuReducer: MenuState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  menuReducer\n};\n\nexport function debug(reducer: ActionReducer<any>): ActionReducer<any> {\n  return function(state, action) {\n    console.log('state', state);\n    console.log('action', action);\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production\n  ? [debug]\n  : [];\n","export { menuReducer, MenuState } from './menu.reducer';\n","import { MenuActionTypes, MenuActions } from '../actions';\n\nexport interface MenuState {\n  open: boolean;\n  closed: boolean;\n}\n\nconst initialState: MenuState = {\n  open: false,\n  closed: true\n};\n\nexport function menuReducer(\n  state: MenuState = initialState,\n  action: MenuActions\n): MenuState {\n  switch (action.type) {\n    case MenuActionTypes.Open:\n      return {\n        ...state,\n        open: true,\n        closed: false\n      };\n    case MenuActionTypes.Close:\n    default:\n      return {\n        ...state,\n        open: false,\n        closed: true\n      };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}